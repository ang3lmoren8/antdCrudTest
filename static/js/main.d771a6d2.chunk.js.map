{"version":3,"sources":["api.js","TodoForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["apiRoute","api","getTodos","axios","get","createTodo","todo","post","Item","Form","useForm","TodoForm","item","loadData","form","useEffect","setFieldsValue","onFinish","values","a","resetFields","layout","className","name","label","rules","required","noStyle","type","block","htmlType","App","useState","todos","setTodos","loading","setLoading","useCallback","data","columns","key","title","dataIndex","render","hours","color","rowKey","row","_id","dataSource","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"mRAEMA,EAAW,4DAQFC,EAFH,CAAEC,SAJG,kBAAMC,IAAMC,IAAN,UAAaJ,EAAb,YAICK,WAFL,SAACC,GAAD,OAAUH,IAAMI,KAAN,UAAcP,EAAd,UAAgCM,K,oDCHrDE,EAAkBC,IAAlBD,KAAME,EAAYD,IAAZC,QAmDCC,EAjDE,SAAC,GAIX,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,SAEI,EACWH,IAARI,EADH,oBAGJC,qBAAU,WACJH,GACFE,EAAKE,eAAL,eAAyBJ,MAG1B,CAACA,IAEJ,IAAMK,EAAQ,uCAAG,WAAOC,GAAP,SAAAC,EAAA,0DACXP,EADW,gEAILX,EAAII,WAAWa,GAJV,OAMXJ,EAAKM,cANM,wDASfP,IATe,yDAAH,sDAYd,OACE,eAAC,IAAD,CAAMC,KAAMA,EAAMO,OAAO,WAAWJ,SAAUA,EAA9C,UACE,sBAAKK,UAAU,MAAf,UACE,qBAAKA,UAAU,MAAf,SACE,cAACd,EAAD,CAAMe,KAAK,OAAOC,MAAM,OAAOC,MAAO,CAAC,CAAEC,UAAU,IAAnD,SACE,cAAC,IAAD,QAGJ,qBAAKJ,UAAU,MAAf,SACE,cAACd,EAAD,CAAMe,KAAK,QAAQC,MAAM,QAAQC,MAAO,CAAC,CAAEC,UAAU,IAArD,SACE,cAAC,IAAD,WAIN,cAAClB,EAAD,CAAMmB,SAAO,EAAb,SACE,cAAC,IAAD,CAAQC,KAAK,UAAUC,OAAK,EAACC,SAAS,SAAtC,SACGlB,EAAO,OAAS,iBCkBZmB,MAzDf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEiBF,oBAAS,GAF1B,mBAENG,EAFM,KAEGC,EAFH,KAIPvB,EAAWwB,sBAAW,sBAAC,8BAAAlB,EAAA,6DAC3BiB,GAAW,GADgB,kBAGFnC,EAAIC,WAHF,iBAGjBoC,EAHiB,EAGjBA,OAENJ,EAASI,GALc,wDAQ3BF,GAAW,GARgB,yDAS1B,IAEHrB,qBAAU,WACJF,GACFA,MAED,CAACA,IAEJ,IAAM0B,EAAU,CACd,CACEC,IAAK,OACLC,MAAO,OACPC,UAAW,QAEb,CACEF,IAAK,QACLC,MAAO,QACPC,UAAW,QACXC,OAAQ,SAACC,GAAD,OACN,eAAC,IAAD,CAAKC,MAAOD,EAAQ,EAAI,OAAS,QAAjC,UAA2CA,EAA3C,UAKN,OACE,sBAAKtB,UAAU,iBAAf,UACE,uCACA,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,+BAAf,SACE,cAAC,EAAD,aAAUT,SAAUA,GAApB,WAAwCA,MAE1C,qBAAKS,UAAU,kBAAf,SACE,cAAC,IAAD,CACEwB,OAAQ,SAACC,GAAD,OAASA,EAAIC,KACrBT,QAASA,EACTU,WAAYhB,EACZE,QAASA,aC7CNe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAAShB,OACP,cAAC,IAAMiB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d771a6d2.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst apiRoute = 'https://crudcrud.com/api/ddf1e6f39a9f46f5bd084d1ea8c1e04f'\r\n\r\nconst getTodos = () => axios.get(`${apiRoute}/todos`)\r\n\r\nconst createTodo = (todo) => axios.post(`${apiRoute}/todos`, todo)\r\n\r\nconst api = { getTodos, createTodo }\r\n\r\nexport default api\r\n","import React, { useEffect } from 'react'\r\nimport { Button, Form, Input, InputNumber } from 'antd'\r\nimport api from './api'\r\nconst { Item, useForm } = Form\r\n\r\nconst TodoForm = ({\r\n  item,\r\n  loadData,\r\n  //  setTodos\r\n}) => {\r\n  const [form] = useForm()\r\n\r\n  useEffect(() => {\r\n    if (item) {\r\n      form.setFieldsValue({ ...item })\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [item])\r\n\r\n  const onFinish = async (values) => {\r\n    if (item) {\r\n    } else {\r\n      try {\r\n        await api.createTodo(values)\r\n        // setTodos((currentTodos) => [...currentTodos, data])\r\n        form.resetFields()\r\n      } catch (error) {}\r\n    }\r\n    loadData()\r\n  }\r\n\r\n  return (\r\n    <Form form={form} layout='vertical' onFinish={onFinish}>\r\n      <div className='row'>\r\n        <div className='col'>\r\n          <Item name='text' label='Text' rules={[{ required: true }]}>\r\n            <Input />\r\n          </Item>\r\n        </div>\r\n        <div className='col'>\r\n          <Item name='hours' label='Hours' rules={[{ required: true }]}>\r\n            <InputNumber />\r\n          </Item>\r\n        </div>\r\n      </div>\r\n      <Item noStyle>\r\n        <Button type='primary' block htmlType='submit'>\r\n          {item ? 'Edit' : 'Create'}\r\n        </Button>\r\n      </Item>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default TodoForm\r\n","import 'antd/dist/antd.css'\nimport 'bootstrap-4-grid/css/grid.min.css'\nimport './css/app.css'\nimport { Table, Tag } from 'antd'\nimport { useCallback, useEffect, useState } from 'react'\nimport api from './api'\nimport TodoForm from './TodoForm'\n\nfunction App() {\n  const [todos, setTodos] = useState([])\n  const [loading, setLoading] = useState(false)\n\n  const loadData = useCallback(async () => {\n    setLoading(true)\n    try {\n      const { data } = await api.getTodos()\n      if (data) {\n        setTodos(data)\n      }\n    } catch (error) {}\n    setLoading(false)\n  }, [])\n\n  useEffect(() => {\n    if (loadData) {\n      loadData()\n    }\n  }, [loadData])\n\n  const columns = [\n    {\n      key: 'text',\n      title: 'Text',\n      dataIndex: 'text',\n    },\n    {\n      key: 'hours',\n      title: 'Hours',\n      dataIndex: 'hours',\n      render: (hours) => (\n        <Tag color={hours > 5 ? 'cyan' : 'green'}>{hours}h</Tag>\n      ),\n    },\n  ]\n\n  return (\n    <div className='container mt-4'>\n      <h1>Todos</h1>\n      <div className='row'>\n        <div className='col-12 col-md-6 pb-4 pb-md-0'>\n          <TodoForm loadData={loadData} loadData={loadData} />\n        </div>\n        <div className='col-12 col-md-6'>\n          <Table\n            rowKey={(row) => row._id}\n            columns={columns}\n            dataSource={todos}\n            loading={loading}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}